{
  "name": "hero-video-dialog",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "name": "HeroVideoDialog.vue",
      "content": "<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Play as PlayIcon, X as XIcon } from 'lucide-vue-next'\n\ninterface HeroVideoProps {\n    videoSrc: string\n    thumbnailSrc: string\n    thumbnailAlt?: string\n}\n\nconst props = defineProps<HeroVideoProps>()\n\nconst isVideoOpen = ref(false)\nconst isCloseHovered = ref(false)\nconst isPlayHovered = ref(false)\n\nconst openVideo = () => {\n    isVideoOpen.value = true\n}\nconst closeVideo = () => {\n    isVideoOpen.value = false\n}\n</script>\n\n<template>\n    <div class=\"relative\">\n        <div\n            class=\"relative cursor-pointer\"\n            @click=\"openVideo\">\n            <img\n                :src=\"thumbnailSrc\"\n                :alt=\"thumbnailAlt\"\n                width=\"1920\"\n                height=\"1080\"\n                class=\"w-full rounded-2xl\" />\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div\n                    class=\"border border-neutral-800 flex items-center justify-center rounded-full backdrop-blur-md transition-transform duration-300 ease-out size-24\"\n                    @mouseenter=\"isPlayHovered = true\"\n                    @mouseleave=\"isPlayHovered = false\">\n                    <div\n                        class=\"flex items-center justify-center border border-neutral-800 rounded-full size-20 transition-all ease-out duration-300 backdrop-blur-2xl relative\"\n                        :class=\"isPlayHovered ? 'scale-105' : 'scale-100'\">\n                        <PlayIcon\n                            class=\"size-8 text-white\"\n                            :style=\"{\n                                transform: isPlayHovered\n                                    ? 'scale(1.1)'\n                                    : 'scale(1)',\n                            }\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div\n            v-if=\"isVideoOpen\"\n            class=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-md\">\n            <div\n                ref=\"videoContainer\"\n                class=\"relative w-full max-w-4xl aspect-video mx-4 md:mx-0\">\n                <button\n                    class=\"absolute -top-16 right-0 text-white text-xl bg-neutral-900/50 ring-1 backdrop-blur-md rounded-full p-2 transition-transform duration-200 ease-out\"\n                    @click=\"closeVideo\"\n                    @mouseenter=\"isCloseHovered = true\"\n                    @mouseleave=\"isCloseHovered = false\"\n                    :class=\"{ 'scale-110': isCloseHovered }\">\n                    <XIcon class=\"size-5\" />\n                </button>\n\n                <div\n                    class=\"size-full border-2 border-white rounded-2xl overflow-hidden isolate z-[1] relative transition-transform duration-200 ease-out\"\n                    :style=\"{\n                        transform: isCloseHovered ? 'scale(0.98)' : 'scale(1)',\n                    }\">\n                    <iframe\n                        :src=\"videoSrc\"\n                        class=\"size-full rounded-2xl\"\n                        allowfullscreen\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"></iframe>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n"
    },
    {
      "name": "index.ts",
      "content": "export {default as HeroVideoDialog} from './HeroVideoDialog.vue'"
    }
  ],
  "type": "components:ui"
}